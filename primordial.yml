
defaultCalculator: ParallelEratosthenesSieve

# This applies to all parallel sieves
parallelismLowerBound: 19

# AWS Lambda Config
awsRegion: EU_WEST_1
awsLevelOfParallelism: 50
awsMinSegmentSize: 65536

# Note that the default AWS response body
# limit is 6MB, so need to limit the AWS segment
# size to avoid hitting this limit.
# Also see: http://docs.aws.amazon.com/lambda/latest/dg/limits.html
#
# The response body size depends on how many primes
# are found in the segment.  For example, between 600,044,722 and  610,044,722
# there's 494,749 primes, which corresponds to a JSON response body size of
# approximately 4.7 MB
awsMaxSegmentSize:  10000000

# Local Parallel Calculator Config
localMinSegmentSize: 65536
localMaxSegmentSize: 2147483647


server:
  applicationConnectors:
    - type: http
      port: 8080
  adminConnectors:
    - type: http
      port: 8081

# Logging settings.
logging:
  # The default level of all loggers. Can be OFF, ERROR, WARN, INFO, DEBUG, TRACE, or ALL.
  level: INFO

  # Logger-specific levels.
  loggers:
    com.villarsolutions.primordial: INFO


# Logback's Time Based Rolling Policy - archivedLogFilenamePattern: /tmp/application-%d{yyyy-MM-dd}.log.gz
# Logback's Size and Time Based Rolling Policy -  archivedLogFilenamePattern: /tmp/application-%d{yyyy-MM-dd}-%i.log.gz
# Logback's Fixed Window Rolling Policy -  archivedLogFilenamePattern: /tmp/application-%i.log.gz

  appenders:

    - type: console
      logFormat: "%-4level [%d{HH:mm:ss.SSS}] [%t] %logger{5} - %X{code} %msg %n"
      timeZone: Europe/London

# Uncomment if you want file-based logging.
#    - type: file
#      threshold: INFO
#      logFormat: "%-6level [%d{HH:mm:ss.SSS}] [%t] %logger{5} - %X{code} %msg %n"
#      currentLogFilename: /tmp/application.log
#      archivedLogFilenamePattern: /tmp/application-%d{yyyy-MM-dd}-%i.log.gz
#      archivedFileCount: 7
#      timeZone: Europe/London
#      maxFileSize: 10MB

metrics:
  type: graphite
  frequency: 10s

